<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FilmesApi</name>
    </assembly>
    <members>
        <member name="M:FilmesApi.Controllers.CinemaController.AdicionaCinema(FilmesApi.Data.Dtos.CreateCinemaDto)">
            <summary>
            Adiciona um cinema ao banco de dados
            </summary>
            <param name="cinemaDto"></param>
            <returns>IActionResult</returns>
            <response code="201">Caso a inserção seja feita com sucesso</response>
        </member>
        <member name="M:FilmesApi.Controllers.CinemaController.RecuperaCinemas(System.Int32,System.Int32)">
            <summary>
            Recupera um ou mais cinemas do banco de dados, com opção de paginamento
            </summary>
            <param name="skip"></param>
            <param name="take"></param>
            <returns>IEnumerable</returns>
            <response code="200">Caso a requisição seja feita com sucesso</response>
        </member>
        <member name="M:FilmesApi.Controllers.CinemaController.RecuperaCinemasPorId(System.Guid)">
            <summary>
            Recupera um cinema do banco de dados pelo id
            </summary>
            <param name="cinemaId"></param>
            <returns>IActionResult</returns>
            <response code="200">Caso a requisição seja feita com sucesso</response>
        </member>
        <member name="M:FilmesApi.Controllers.CinemaController.AtualizaCinema(System.Guid,FilmesApi.Data.Dtos.UpdateCinemaDto)">
            <summary>
            Atualiza um cinema do banco de dados pelo id
            </summary>
            <param name="cinemaId"></param>
            <param name="cinemaDto"></param>
            <returns>IActionResult</returns>
            <response code="201">Caso a requisição seja feita com sucesso</response>
        </member>
        <member name="M:FilmesApi.Controllers.CinemaController.AtualizaCinemaParcial(System.Guid,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{FilmesApi.Data.Dtos.UpdateCinemaDto})">
            <summary>
            Atualiza partes de um cinema do banco de dados pelo id
            </summary>
            <param name="cinemaId"></param>
            <param name="patch"></param>
            <returns>IActionResult</returns>
            <response code="201">Caso a requisição seja feita com sucesso</response>
        </member>
        <member name="M:FilmesApi.Controllers.CinemaController.DeletaCinema(System.Guid)">
            <summary>
            Deleta um cinema do banco de dados pelo id
            </summary>
            <param name="cinemaId"></param>
            <returns>IActionResult</returns>
            <response code="201">Caso a requisição seja feita com sucesso</response>
        </member>
        <member name="M:FilmesApi.Controllers.EnderecoController.AdicionaEndereco(FilmesApi.Data.Dtos.CreateEnderecoDto)">
            <summary>
            Adiciona um endereco ao banco de dados
            </summary>
            <param name="enderecoDto"></param>
            <returns>IActionResult</returns>
            <response code="201">Caso a inserção seja feita com sucesso</response>
        </member>
        <member name="M:FilmesApi.Controllers.EnderecoController.RecuperaEnderecos(System.Int32,System.Int32)">
            <summary>
            Recupera um ou mais enderecos do banco de dados, com opção de paginamento
            </summary>
            <param name="skip"></param>
            <param name="take"></param>
            <returns>IEnumerable</returns>
            <response code="200">Caso a requisição seja feita com sucesso</response>
        </member>
        <member name="M:FilmesApi.Controllers.EnderecoController.RecuperaEnderecosPorId(System.Guid)">
            <summary>
            Recupera um endereco do banco de dados pelo id
            </summary>
            <param name="enderecoId"></param>
            <returns>IActionResult</returns>
            <response code="200">Caso a requisição seja feita com sucesso</response>
        </member>
        <member name="M:FilmesApi.Controllers.EnderecoController.AtualizaEndereco(System.Guid,FilmesApi.Data.Dtos.UpdateEnderecoDto)">
            <summary>
            Atualiza um endereco do banco de dados pelo id
            </summary>
            <param name="enderecoId"></param>
            <param name="enderecoDto"></param>
            <returns>IActionResult</returns>
            <response code="201">Caso a requisição seja feita com sucesso</response>
        </member>
        <member name="M:FilmesApi.Controllers.EnderecoController.AtualizaEnderecoParcial(System.Guid,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{FilmesApi.Data.Dtos.UpdateEnderecoDto})">
            <summary>
            Atualiza partes de um endereco do banco de dados pelo id
            </summary>
            <param name="enderecoId"></param>
            <param name="patch"></param>
            <returns>IActionResult</returns>
            <response code="201">Caso a requisição seja feita com sucesso</response>
        </member>
        <member name="M:FilmesApi.Controllers.EnderecoController.DeletaEndereco(System.Guid)">
            <summary>
            Deleta um endereco do banco de dados pelo id
            </summary>
            <param name="enderecoId"></param>
            <returns>IActionResult</returns>
            <response code="201">Caso a requisição seja feita com sucesso</response>
        </member>
        <member name="M:FilmesApi.Controllers.FilmeController.AdicionaFilme(FilmesApi.Data.Dtos.CreateFilmeDto)">
            <summary>
            Adiciona um filme ao banco de dados
            </summary>
            <param name="filmeDto"></param>
            <returns>IActionResult</returns>
            <response code="201">Caso a inserção seja feita com sucesso</response>
        </member>
        <member name="M:FilmesApi.Controllers.FilmeController.RecuperaFilmes(System.Int32,System.Int32)">
            <summary>
            Recupera um ou mais filmes do banco de dados, com opção de paginamento
            </summary>
            <param name="skip"></param>
            <param name="take"></param>
            <returns>IEnumerable</returns>
            <response code="200">Caso a requisição seja feita com sucesso</response>
        </member>
        <member name="M:FilmesApi.Controllers.FilmeController.RecuperaFilmesPorId(System.Guid)">
            <summary>
            Recupera um filme do banco de dados pelo id
            </summary>
            <param name="filmeId"></param>
            <returns>IActionResult</returns>
            <response code="200">Caso a requisição seja feita com sucesso</response>
        </member>
        <member name="M:FilmesApi.Controllers.FilmeController.AtualizaFilme(System.Guid,FilmesApi.Data.Dtos.UpdateFilmeDto)">
            <summary>
            Atualiza um filme do banco de dados pelo id
            </summary>
            <param name="filmeId"></param>
            <param name="filmeDto"></param>
            <returns>IActionResult</returns>
            <response code="201">Caso a requisição seja feita com sucesso</response>
        </member>
        <member name="M:FilmesApi.Controllers.FilmeController.AtualizaFilmeParcial(System.Guid,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{FilmesApi.Data.Dtos.UpdateFilmeDto})">
            <summary>
            Atualiza partes de um filme do banco de dados pelo id
            </summary>
            <param name="filmeId"></param>
            <param name="patch"></param>
            <returns>IActionResult</returns>
            <response code="201">Caso a requisição seja feita com sucesso</response>
        </member>
        <member name="M:FilmesApi.Controllers.FilmeController.DeletaFilme(System.Guid)">
            <summary>
            Deleta um filme do banco de dados pelo id
            </summary>
            <param name="filmeId"></param>
            <returns>IActionResult</returns>
            <response code="201">Caso a requisição seja feita com sucesso</response>
        </member>
        <member name="T:FilmesApi.Migrations.CriandoTabelaDeFilme">
            <inheritdoc />
        </member>
        <member name="M:FilmesApi.Migrations.CriandoTabelaDeFilme.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:FilmesApi.Migrations.CriandoTabelaDeFilme.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:FilmesApi.Migrations.CriandoTabelaDeFilme.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:FilmesApi.Migrations.CinemaeEndereco">
            <inheritdoc />
        </member>
        <member name="M:FilmesApi.Migrations.CinemaeEndereco.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:FilmesApi.Migrations.CinemaeEndereco.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:FilmesApi.Migrations.CinemaeEndereco.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
    </members>
</doc>
